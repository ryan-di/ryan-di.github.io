{"version":3,"sources":["logo.svg","HistoryStack.js","Game.js","App.js","reportWebVitals.js","index.js"],"names":["Node","value","this","prev","next","HistoryStack","capacity","size","head","tail","_removeFirst","node","last","first","CELL_SIZE","ROWS","HEIGHT","COLS","BOARD","makeEmptyBoard","Cell","x","y","className","style","left","top","width","height","Game","boardRef","React","createRef","prevBtn","useState","cells","setCells","disablePrev","setDisablePrev","HISTORY","useEffect","current","disabled","backgroundSize","ref","onClick","event","elemOffset","rect","getBoundingClientRect","doc","document","documentElement","window","pageXOffset","clientLeft","pageYOffset","clientTop","getElementOffset","offsetX","clientX","offsetY","clientY","Math","floor","makeCells","map","cell","b","pop","push","Array","newBoard","neighbors","numberOfNeighbors","clear","textAlign","result","dirs","i","length","_y","_x","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.11419f8c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","class Node {\n\tconstructor(value) {\n\t\tthis.value = value;\n\t\tthis.prev = null;\n\t\tthis.next = null;\n\t}\n}\n\nexport default class HistoryStack {\n\tconstructor(capacity) {\n\t\tthis.capacity = capacity;\n\t\tthis.size = 0;\n\t\tthis.head = new Node(null);\n\t\tthis.tail = new Node(null);\n\t\tthis.head.next = this.tail;\n\t\tthis.tail.prev = this.head;\n\t}\n\n\tpush(value) {\n\t\tif (this.size === this.capacity) {\n\t\t\tthis._removeFirst();\n\t\t}\n\t\tlet node = new Node(value);\n\t\tlet last = this.tail.prev;\n\t\tlast.next = node;\n\t\tnode.prev = last;\n\t\tnode.next = this.tail;\n\t\tthis.tail.prev = node;\n\t\tthis.size += 1;\n\t}\n\n\t_removeFirst() {\n\t\tlet first = this.head.next;\n\t\tthis.head.next = first.next;\n\t\tfirst.next.prev = this.head;\n\t\tfirst = null;\n\t\tthis.size -= 1;\n\t}\n\n\tpop() {\n\t\tif (this.size > 0) {\n\t\t\tlet last = this.tail.prev;\n\t\t\tthis.tail.prev = last.prev;\n\t\t\tlast.prev.next = this.tail;\n\t\t\tthis.size -= 1;\n\t\t\treturn last.value;\n\t\t}\n\t\treturn null;\n\t}\n\n\tclear() {\n\t\tthis.head.next = this.tail;\n\t\tthis.tail.prev = this.head;\n\t\tthis.size = 0;\n\t}\n}\n","import React, { useEffect, useState } from 'react';\nimport './Game.css';\nimport HistoryStack from './HistoryStack';\n\nconst CELL_SIZE = 20;\nconst WIDTH = 400;\nconst HEIGHT = 400;\nconst ROWS = HEIGHT / CELL_SIZE;\nconst COLS = HEIGHT / CELL_SIZE;\nlet BOARD = makeEmptyBoard();\n\nfunction Cell({ x, y }) {\n\treturn (\n\t\t<div\n\t\t\tclassName=\"Cell\"\n\t\t\tstyle={{\n\t\t\t\tleft: CELL_SIZE * x + 1,\n\t\t\t\ttop: CELL_SIZE * y + 1,\n\t\t\t\twidth: CELL_SIZE - 1,\n\t\t\t\theight: CELL_SIZE - 1,\n\t\t\t}}\n\t\t/>\n\t);\n}\n\nexport default function Game() {\n\t// states\n\tlet boardRef = React.createRef();\n\tlet prevBtn = React.createRef();\n\tconst [cells, setCells] = useState([]);\n\tconst [disablePrev, setDisablePrev] = useState(true);\n\tconst [HISTORY] = useState(new HistoryStack(10));\n\n\tuseEffect(() => {\n\t\tprevBtn.current.disabled = disablePrev;\n\t}, [disablePrev]);\n\n\t// render\n\treturn (\n\t\t<>\n\t\t\t<div\n\t\t\t\tclassName=\"Board\"\n\t\t\t\tstyle={{\n\t\t\t\t\twidth: WIDTH,\n\t\t\t\t\theight: HEIGHT,\n\t\t\t\t\tbackgroundSize: `${CELL_SIZE}px ${CELL_SIZE}px`,\n\t\t\t\t}}\n\t\t\t\tref={boardRef}\n\t\t\t\tonClick={handleClick}\n\t\t\t>\n\t\t\t\t{cells.map((cell) => (\n\t\t\t\t\t<Cell x={cell.x} y={cell.y} key={`${cell.x} ${cell.y}`} />\n\t\t\t\t))}\n\t\t\t</div>\n\t\t\t<div\n\t\t\t\tclassName=\"controls\"\n\t\t\t\tstyle={{\n\t\t\t\t\twidth: WIDTH,\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<button className=\"btn\" ref={prevBtn} onClick={getPrevBoard}>\n\t\t\t\t\tPrev\n\t\t\t\t</button>\n\t\t\t\t<button className=\"btn\" onClick={getNextBoard}>\n\t\t\t\t\tNext\n\t\t\t\t</button>\n\t\t\t\t<button className=\"btn\" onClick={reset}>\n\t\t\t\t\tReset\n\t\t\t\t</button>\n\t\t\t\t<div\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\ttextAlign: 'left',\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tClick the board to add or remove a cell. Click \"Next\" to get the next iteration and click \"Prev\" to go back.\n\t\t\t\t\t\tYou can go back up to 10 steps. Finally, click \"Reset\" to simply clear the board and start over.\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</>\n\t);\n\n\t/**\n\t * Add or remove a cell on the board\n\t * @param {MouseEvent} event\n\t */\n\tfunction handleClick(event) {\n\t\tconst elemOffset = getElementOffset(boardRef);\n\t\tconst offsetX = event.clientX - elemOffset.x;\n\t\tconst offsetY = event.clientY - elemOffset.y;\n\n\t\tconst x = Math.floor(offsetX / CELL_SIZE);\n\t\tconst y = Math.floor(offsetY / CELL_SIZE);\n\n\t\tif (x >= 0 && x < COLS && y >= 0 && y < ROWS) BOARD[y][x] = !BOARD[y][x];\n\t\tsetCells(makeCells(BOARD));\n\t}\n\n\tfunction getNextBoard() {\n\t\tHISTORY.push(new Array(...BOARD));\n\t\tlet newBoard = makeEmptyBoard();\n\n\t\tfor (let y = 0; y < ROWS; y++) {\n\t\t\tfor (let x = 0; x < COLS; x++) {\n\t\t\t\tlet neighbors = numberOfNeighbors(x, y);\n\t\t\t\tif (BOARD[y][x]) {\n\t\t\t\t\tnewBoard[y][x] = neighbors === 2 || neighbors === 3 ? true : false;\n\t\t\t\t} else {\n\t\t\t\t\tif (!BOARD[y][x] && neighbors === 3) {\n\t\t\t\t\t\tnewBoard[y][x] = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tBOARD = newBoard;\n\t\tsetCells(makeCells(BOARD));\n\t\tsetDisablePrev(false);\n\t}\n\n\tfunction getPrevBoard() {\n\t\tlet b = HISTORY.pop();\n\t\tif (b) {\n\t\t\tBOARD = b;\n\t\t\tsetCells(makeCells(BOARD));\n\t\t}\n\t\tif (HISTORY.size === 0) setDisablePrev(true);\n\t}\n\n\tfunction reset() {\n\t\tHISTORY.clear();\n\t\tBOARD = makeEmptyBoard();\n\t\tsetDisablePrev(true);\n\t\tsetCells([]);\n\t}\n\n\tfunction randomCells() {\n\t\tfor (let y = 0; y < ROWS; y++) {\n\t\t\tfor (let x = 0; x < COLS; x++) {\n\t\t\t\tBOARD[y][x] = Math.random() >= 0.5;\n\t\t\t}\n\t\t}\n\t\treturn makeCells(BOARD);\n\t}\n}\n\n// utility functions for boards and cells\n\n/**\n * Takes a game state board and returns the correpondings cells\n * which is an array of coordinates\n * @param {Array} b\n */\nfunction makeCells(b) {\n\tlet cells = [];\n\tfor (let y = 0; y < ROWS; y++) {\n\t\tfor (let x = 0; x < COLS; x++) {\n\t\t\tif (b[y][x]) cells.push({ x, y });\n\t\t}\n\t}\n\treturn cells;\n}\n\n/**\n * Return an empty board\n */\nfunction makeEmptyBoard() {\n\tlet result = [];\n\tfor (let y = 0; y < ROWS; y++) {\n\t\tresult.push([]);\n\t\tfor (let x = 0; x < COLS; x++) {\n\t\t\tresult[y].push(false);\n\t\t}\n\t}\n\treturn result;\n}\n\n/**\n * Calculates the number of neighbors for the cell at {x, y}\n * @param {Array} board\n * @param {number} x\n * @param {number} y\n */\nfunction numberOfNeighbors(x, y) {\n\tlet neighbors = 0;\n\tconst dirs = [\n\t\t[-1, -1],\n\t\t[-1, 0],\n\t\t[-1, 1],\n\t\t[0, 1],\n\t\t[1, 1],\n\t\t[1, -1],\n\t\t[0, -1],\n\t];\n\n\tfor (let i = 0; i < dirs.length; i++) {\n\t\tlet [offY, offX] = dirs[i];\n\t\tlet _y = y + offY;\n\t\tlet _x = x + offX;\n\n\t\tif (_x >= 0 && _x < COLS && _y >= 0 && _y < ROWS && BOARD[_y][_x]) neighbors++;\n\t}\n\treturn neighbors;\n}\n\n/**\n * Returns the offset of the board\n * @param {import('react').Ref} boardRef\n */\nfunction getElementOffset(boardRef) {\n\tconst rect = boardRef.current.getBoundingClientRect();\n\tconst doc = document.documentElement;\n\n\treturn {\n\t\tx: rect.left + window.pageXOffset - doc.clientLeft,\n\t\ty: rect.top + window.pageYOffset - doc.clientTop,\n\t};\n}\n","import logo from './logo.svg';\nimport './App.css';\nimport Game from './Game';\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<h1>Way Of Life</h1>\n\t\t\t<Game />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}